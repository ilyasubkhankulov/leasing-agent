import sqlmodel
"""initial tables

Revision ID: 6f11ec5e283e
Revises: 728455e2e369
Create Date: 2025-06-23 23:13:39.691714

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6f11ec5e283e'
down_revision: Union[str, Sequence[str], None] = '728455e2e369'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('communities',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=50), server_default=sa.text('nanoid()'), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('address', sa.String(length=500), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_communities_id'), 'communities', ['id'], unique=False)
    op.create_table('leads',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=50), server_default=sa.text('nanoid()'), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('preferred_bedrooms', sa.Integer(), nullable=True),
    sa.Column('preferred_move_in', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_leads_email'), 'leads', ['email'], unique=False)
    op.create_index(op.f('ix_leads_id'), 'leads', ['id'], unique=False)
    op.create_table('conversations',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=50), server_default=sa.text('nanoid()'), nullable=False),
    sa.Column('lead_id', sa.String(length=50), nullable=False),
    sa.Column('community_id', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ),
    sa.ForeignKeyConstraint(['lead_id'], ['leads.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversations_community_id'), 'conversations', ['community_id'], unique=False)
    op.create_index(op.f('ix_conversations_id'), 'conversations', ['id'], unique=False)
    op.create_index(op.f('ix_conversations_lead_id'), 'conversations', ['lead_id'], unique=False)
    op.create_table('pet_policies',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=50), server_default=sa.text('nanoid()'), nullable=False),
    sa.Column('community_id', sa.String(length=50), nullable=False),
    sa.Column('pet_type', sa.Enum('CAT', 'DOG', 'BIRD', 'FISH', 'OTHER', name='pet_type'), nullable=False),
    sa.Column('allowed', sa.Boolean(), nullable=False),
    sa.Column('fee', sa.Integer(), nullable=True),
    sa.Column('deposit', sa.Integer(), nullable=True),
    sa.Column('monthly_rent', sa.Integer(), nullable=True),
    sa.Column('max_count', sa.Integer(), nullable=True),
    sa.Column('weight_limit', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pet_policies_community_id'), 'pet_policies', ['community_id'], unique=False)
    op.create_index(op.f('ix_pet_policies_id'), 'pet_policies', ['id'], unique=False)
    op.create_index(op.f('ix_pet_policies_pet_type'), 'pet_policies', ['pet_type'], unique=False)
    op.create_table('tour_slots',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=50), server_default=sa.text('nanoid()'), nullable=False),
    sa.Column('community_id', sa.String(length=50), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=False),
    sa.Column('max_capacity', sa.Integer(), nullable=False),
    sa.Column('current_bookings', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tour_slots_community_id'), 'tour_slots', ['community_id'], unique=False)
    op.create_index(op.f('ix_tour_slots_id'), 'tour_slots', ['id'], unique=False)
    op.create_index(op.f('ix_tour_slots_start_time'), 'tour_slots', ['start_time'], unique=False)
    op.create_table('units',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=50), server_default=sa.text('nanoid()'), nullable=False),
    sa.Column('community_id', sa.String(length=50), nullable=False),
    sa.Column('unit_number', sa.String(length=20), nullable=False),
    sa.Column('bedrooms', sa.Integer(), nullable=False),
    sa.Column('bathrooms', sa.Float(), nullable=False),
    sa.Column('square_feet', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('base_rent', sa.Integer(), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=False),
    sa.Column('available_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_units_bedrooms'), 'units', ['bedrooms'], unique=False)
    op.create_index(op.f('ix_units_community_id'), 'units', ['community_id'], unique=False)
    op.create_index(op.f('ix_units_id'), 'units', ['id'], unique=False)
    op.create_table('messages',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=50), server_default=sa.text('nanoid()'), nullable=False),
    sa.Column('conversation_id', sa.String(length=50), nullable=False),
    sa.Column('message_text', sa.Text(), nullable=False),
    sa.Column('reply_text', sa.Text(), nullable=True),
    sa.Column('action', sa.Enum('PROPOSE_TOUR', 'ASK_CLARIFICATION', 'HANDOFF_HUMAN', name='action_type'), nullable=True),
    sa.Column('proposed_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('tools_called', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('llm_tokens_used', sa.Integer(), nullable=True),
    sa.Column('llm_latency_ms', sa.Integer(), nullable=True),
    sa.Column('request_id', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_messages_conversation_id'), 'messages', ['conversation_id'], unique=False)
    op.create_index(op.f('ix_messages_id'), 'messages', ['id'], unique=False)
    op.create_index(op.f('ix_messages_request_id'), 'messages', ['request_id'], unique=False)
    op.create_table('unit_pricing',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=50), server_default=sa.text('nanoid()'), nullable=False),
    sa.Column('unit_id', sa.String(length=50), nullable=False),
    sa.Column('move_in_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('rent', sa.Integer(), nullable=False),
    sa.Column('special_offer', sa.String(length=255), nullable=True),
    sa.Column('special_discount', sa.Integer(), nullable=True),
    sa.Column('effective_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('expires_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['unit_id'], ['units.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_unit_pricing_id'), 'unit_pricing', ['id'], unique=False)
    op.create_index(op.f('ix_unit_pricing_move_in_date'), 'unit_pricing', ['move_in_date'], unique=False)
    op.create_index(op.f('ix_unit_pricing_unit_id'), 'unit_pricing', ['unit_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_unit_pricing_unit_id'), table_name='unit_pricing')
    op.drop_index(op.f('ix_unit_pricing_move_in_date'), table_name='unit_pricing')
    op.drop_index(op.f('ix_unit_pricing_id'), table_name='unit_pricing')
    op.drop_table('unit_pricing')
    op.drop_index(op.f('ix_messages_request_id'), table_name='messages')
    op.drop_index(op.f('ix_messages_id'), table_name='messages')
    op.drop_index(op.f('ix_messages_conversation_id'), table_name='messages')
    op.drop_table('messages')
    op.drop_index(op.f('ix_units_id'), table_name='units')
    op.drop_index(op.f('ix_units_community_id'), table_name='units')
    op.drop_index(op.f('ix_units_bedrooms'), table_name='units')
    op.drop_table('units')
    op.drop_index(op.f('ix_tour_slots_start_time'), table_name='tour_slots')
    op.drop_index(op.f('ix_tour_slots_id'), table_name='tour_slots')
    op.drop_index(op.f('ix_tour_slots_community_id'), table_name='tour_slots')
    op.drop_table('tour_slots')
    op.drop_index(op.f('ix_pet_policies_pet_type'), table_name='pet_policies')
    op.drop_index(op.f('ix_pet_policies_id'), table_name='pet_policies')
    op.drop_index(op.f('ix_pet_policies_community_id'), table_name='pet_policies')
    op.drop_table('pet_policies')
    op.drop_index(op.f('ix_conversations_lead_id'), table_name='conversations')
    op.drop_index(op.f('ix_conversations_id'), table_name='conversations')
    op.drop_index(op.f('ix_conversations_community_id'), table_name='conversations')
    op.drop_table('conversations')
    op.drop_index(op.f('ix_leads_id'), table_name='leads')
    op.drop_index(op.f('ix_leads_email'), table_name='leads')
    op.drop_table('leads')
    op.drop_index(op.f('ix_communities_id'), table_name='communities')
    op.drop_table('communities')
    # ### end Alembic commands ###
